f = open("./uvm_codes/env.sv", "w")

f.write('`include "uvm_macros.svh"\n')
f.write('import uvm_pkg::*;\n')
f.write('`include "agent.sv"\n')
f.write('`include "scoreboard.sv"\n')
f.write('\n')
f.write('class env extends uvm_env;\n')
f.write('\n')
f.write('    `uvm_component_utils(env)\n')
f.write('     agent agnt;\n')
f.write('     scoreboard scbd;\n')
f.write('\n')
f.write('    function new(string name, uvm_component parent);\n')
f.write('        super.new(name, parent);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void build();\n')
f.write('        uvm_report_info(get_full_name(),"Build", UVM_LOW);\n')
f.write('        ag1 = agent::type_id::create("ag1",this);\n')
f.write('        sbd = scoreboard::type_id::create("sbd",this);\n') 
f.write('    endfunction\n')
f.write('\n')
f.write('    function void connect();\n')
f.write('        uvm_report_info(get_full_name(),"Connect", UVM_LOW);\n')
f.write('        agnt.ap.connect(scbd.scbd_mon_export);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void end_of_elaboration();\n')
f.write('        uvm_report_info(get_full_name(),"End_of_elaboration", UVM_LOW);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void start_of_simulation();\n')
f.write('        uvm_report_info(get_full_name(),"Start_of_simulation", UVM_LOW);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void extract();\n')
f.write('        uvm_report_info(get_full_name(),"Extract", UVM_LOW);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void check();\n')
f.write('        uvm_report_info(get_full_name(),"Check", UVM_LOW);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('    function void report();\n')
f.write('        uvm_report_info(get_full_name(),"Report", UVM_LOW);\n')
f.write('    endfunction\n')
f.write('\n')
f.write('endclass\n')
f.write('\n')

f.close()

#open and read the file after the appending:
f = open("./uvm_codes/env.sv", "r")
print(f.read())